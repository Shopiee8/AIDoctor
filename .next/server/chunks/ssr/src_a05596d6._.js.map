{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/carousel.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n"],"names":[],"mappings":";;;;;;;;AAEA;AACA;AAGA;AAAA;AAEA;AACA;AATA;;;;;;;AAgCA,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,gBAAmB,AAAD,EAA+B;AAEzE,SAAS;IACP,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE;IAEjC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI9B,CACE,EACE,cAAc,YAAY,EAC1B,IAAI,EACJ,MAAM,EACN,OAAO,EACP,SAAS,EACT,QAAQ,EACR,GAAG,OACJ,EACD;IAEA,MAAM,CAAC,aAAa,IAAI,GAAG,CAAA,GAAA,sLAAA,CAAA,UAAgB,AAAD,EACxC;QACE,GAAG,IAAI;QACP,MAAM,gBAAgB,eAAe,MAAM;IAC7C,GACA;IAEF,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAE;IACzD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAE;IAEzD,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,cAAiB,AAAD,EAAE,CAAC;QAClC,IAAI,CAAC,KAAK;YACR;QACF;QAEA,iBAAiB,IAAI,aAAa;QAClC,iBAAiB,IAAI,aAAa;IACpC,GAAG,EAAE;IAEL,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,cAAiB,AAAD,EAAE;QACnC,KAAK;IACP,GAAG;QAAC;KAAI;IAER,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,cAAiB,AAAD,EAAE;QACnC,KAAK;IACP,GAAG;QAAC;KAAI;IAER,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAiB,AAAD,EACpC,CAAC;QACC,IAAI,MAAM,GAAG,KAAK,aAAa;YAC7B,MAAM,cAAc;YACpB;QACF,OAAO,IAAI,MAAM,GAAG,KAAK,cAAc;YACrC,MAAM,cAAc;YACpB;QACF;IACF,GACA;QAAC;QAAY;KAAW;IAG1B,CAAA,GAAA,qMAAA,CAAA,YAAe,AAAD,EAAE;QACd,IAAI,CAAC,OAAO,CAAC,QAAQ;YACnB;QACF;QAEA,OAAO;IACT,GAAG;QAAC;QAAK;KAAO;IAEhB,CAAA,GAAA,qMAAA,CAAA,YAAe,AAAD,EAAE;QACd,IAAI,CAAC,KAAK;YACR;QACF;QAEA,SAAS;QACT,IAAI,EAAE,CAAC,UAAU;QACjB,IAAI,EAAE,CAAC,UAAU;QAEjB,OAAO;YACL,KAAK,IAAI,UAAU;QACrB;IACF,GAAG;QAAC;QAAK;KAAS;IAElB,qBACE,8OAAC,gBAAgB,QAAQ;QACvB,OAAO;YACL;YACA,KAAK;YACL;YACA,aACE,eAAe,CAAC,MAAM,SAAS,MAAM,aAAa,YAAY;YAChE;YACA;YACA;YACA;QACF;kBAEA,cAAA,8OAAC;YACC,KAAK;YACL,kBAAkB;YAClB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;YAC1B,MAAK;YACL,wBAAqB;YACpB,GAAG,KAAK;sBAER;;;;;;;;;;;AAIT;AAEF,SAAS,WAAW,GAAG;AAEvB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG;IAErC,qBACE,8OAAC;QAAI,KAAK;QAAa,WAAU;kBAC/B,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,QACA,gBAAgB,eAAe,UAAU,kBACzC;YAED,GAAG,KAAK;;;;;;;;;;;AAIjB;AACA,gBAAgB,WAAW,GAAG;AAE9B,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,MAAM,EAAE,WAAW,EAAE,GAAG;IAExB,qBACE,8OAAC;QACC,KAAK;QACL,MAAK;QACL,wBAAqB;QACrB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sCACA,gBAAgB,eAAe,SAAS,QACxC;QAED,GAAG,KAAK;;;;;;AAGf;AACA,aAAa,WAAW,GAAG;AAE3B,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,OAAO,MAAM,EAAE,GAAG,OAAO,EAAE;IAC9D,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG;IAEnD,qBACE,8OAAC,kIAAA,CAAA,SAAM;QACL,KAAK;QACL,SAAS;QACT,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kCACA,gBAAgB,eACZ,sCACA,+CACJ;QAEF,UAAU,CAAC;QACX,SAAS;QACR,GAAG,KAAK;;0BAET,8OAAC,gNAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;0BACrB,8OAAC;gBAAK,WAAU;0BAAU;;;;;;;;;;;;AAGhC;AACA,iBAAiB,WAAW,GAAG;AAE/B,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,OAAO,MAAM,EAAE,GAAG,OAAO,EAAE;IAC9D,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG;IAEnD,qBACE,8OAAC,kIAAA,CAAA,SAAM;QACL,KAAK;QACL,SAAS;QACT,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iCACA,gBAAgB,eACZ,uCACA,kDACJ;QAEF,UAAU,CAAC;QACX,SAAS;QACR,GAAG,KAAK;;0BAET,8OAAC,kNAAA,CAAA,aAAU;gBAAC,WAAU;;;;;;0BACtB,8OAAC;gBAAK,WAAU;0BAAU;;;;;;;;;;;;AAGhC;AACA,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 481, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 523, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {typeof item.value === 'number' ? item.value.toLocaleString() : item.value}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 819, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/page.tsx"],"sourcesContent":["\n'use client';\n\nimport {\n  Heart, LineChart, Thermometer, TestTube2, Droplets, User, Calendar, Bell, Wallet, MessageSquare, Plus, ChevronRight, Eye, Hospital, Video, Clock, MessageCircle, FileText, Download, Trash2, Link as LinkIcon\n} from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Carousel, CarouselContent, CarouselItem, CarouselNext, CarouselPrevious } from \"@/components/ui/carousel\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport Link from 'next/link';\nimport Image from \"next/image\";\nimport {\n  ChartContainer as Chart,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\";\nimport { Bar, BarChart, CartesianGrid, XAxis, YAxis } from \"recharts\"\nimport { ChartConfig } from \"@/components/ui/chart\";\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport React from \"react\";\nimport { usePatientDataStore } from \"@/store/patient-data-store\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\nconst chartConfig: ChartConfig = {\n  desktop: {\n    label: \"Heart Rate\",\n    color: \"hsl(var(--primary))\",\n  },\n  systolic: {\n    label: \"Systolic\",\n    color: \"hsl(var(--primary))\",\n  },\n  diastolic: {\n    label: \"Diastolic\",\n    color: \"hsl(var(--secondary))\",\n  },\n}\n\n\nexport default function PatientDashboardPage() {\n    const { \n        healthRecords, \n        healthReport,\n        analytics, \n        favorites, \n        appointmentDates, \n        upcomingAppointments, \n        dependents, \n        reports,\n        isLoading\n    } = usePatientDataStore();\n\n    if (isLoading) {\n        return <DashboardSkeleton />;\n    }\n\n    return (\n        <div className=\"space-y-6\">\n\n            <div className=\"grid grid-cols-1 xl:grid-cols-12 gap-6\">\n                \n                {/* Left Column */}\n                <div className=\"xl:col-span-8 flex flex-col gap-6\">\n                    <Card>\n                        <CardHeader>\n                            <CardTitle>Health Records</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                            <div className=\"grid md:grid-cols-2 gap-6\">\n                                <div className=\"grid grid-cols-2 gap-4\">\n                                    {healthRecords.map((record, index) => (\n                                        <div key={index} className=\"p-4 border rounded-lg\">\n                                            <div className={`flex items-center gap-2 text-sm ${record.color}`}>\n                                                <record.icon className=\"w-5 h-5\" />\n                                                <span>{record.title}</span>\n                                            </div>\n                                            <h3 className=\"text-2xl font-bold mt-2\">{record.value} {record.trend && <sup className={`text-xs font-normal ${record.trend.startsWith('+') ? 'text-green-500' : 'text-red-500'}`}>{record.trend}</sup>}</h3>\n                                        </div>\n                                    ))}\n                                    {healthRecords.length === 0 && <p className=\"text-muted-foreground col-span-2\">No health records available.</p>}\n                                </div>\n                                <div className=\"flex flex-col items-center justify-center text-center p-4 border rounded-lg\">\n                                     <div style={{ width: 200, height: 200 }}>\n                                        <CircularProgressbar\n                                            value={healthReport.percentage}\n                                            text={`${healthReport.percentage}%`}\n                                            strokeWidth={7}\n                                            styles={buildStyles({\n                                                textColor: 'hsl(var(--foreground))',\n                                                pathColor: 'hsl(var(--primary))',\n                                                trailColor: 'hsl(var(--muted))',\n                                                textSize: '16px',\n                                            })}\n                                        />\n                                    </div>\n                                    <p className=\"mt-4 text-sm font-semibold\">{healthReport.title}</p>\n                                    <p className=\"text-xs text-muted-foreground\">{healthReport.details}</p>\n                                    <Button asChild className=\"mt-4 w-full\">\n                                        <Link href=\"/dashboard/medical-records\">View Details <ChevronRight className=\"w-4 h-4 ml-2\"/></Link>\n                                    </Button>\n                                </div>\n                            </div>\n                        </CardContent>\n                    </Card>\n\n                    <Card>\n                        <CardHeader>\n                            <CardTitle>Analytics</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                            <Tabs defaultValue=\"heart-rate\">\n                                <TabsList>\n                                    <TabsTrigger value=\"heart-rate\">Heart Rate</TabsTrigger>\n                                    <TabsTrigger value=\"blood-pressure\">Blood Pressure</TabsTrigger>\n                                </TabsList>\n                                <TabsContent value=\"heart-rate\">\n                                   <Chart config={chartConfig} className=\"h-64\">\n                                      <BarChart accessibilityLayer data={analytics.heartRate}>\n                                        <CartesianGrid vertical={false} />\n                                        <XAxis dataKey=\"month\" tickLine={false} tickMargin={10} axisLine={false} />\n                                        <YAxis tickLine={false} axisLine={false} />\n                                        <ChartTooltip content={<ChartTooltipContent />} />\n                                        <Bar dataKey=\"desktop\" fill=\"var(--color-desktop)\" radius={4} />\n                                      </BarChart>\n                                    </Chart>\n                                </TabsContent>\n                                <TabsContent value=\"blood-pressure\">\n                                    <Chart config={chartConfig} className=\"h-64\">\n                                      <BarChart accessibilityLayer data={analytics.bloodPressure}>\n                                        <CartesianGrid vertical={false} />\n                                        <XAxis dataKey=\"month\" tickLine={false} tickMargin={10} axisLine={false} />\n                                        <YAxis tickLine={false} axisLine={false} />\n                                        <ChartTooltip content={<ChartTooltipContent />} />\n                                        <Bar dataKey=\"systolic\" fill=\"var(--color-systolic)\" radius={4} />\n                                        <Bar dataKey=\"diastolic\" fill=\"var(--color-diastolic)\" radius={4} />\n                                      </BarChart>\n                                    </Chart>\n                                </TabsContent>\n                            </Tabs>\n                        </CardContent>\n                    </Card>\n                </div>\n\n                {/* Right Column */}\n                <div className=\"xl:col-span-4 flex flex-col gap-6\">\n                    <div className=\"bg-primary text-primary-foreground p-6 rounded-lg text-center\">\n                        <h3 className=\"font-headline text-xl mb-1\">Book a new Appointment</h3>\n                        <p className=\"text-primary-foreground/80 text-sm mb-4\">Start your health journey today.</p>\n                        <Button variant=\"secondary\" className=\"w-full\">\n                            <Plus className=\"w-4 h-4 mr-2\"/> Book Now\n                        </Button>\n                    </div>\n                    <Card>\n                        <CardHeader className=\"flex-row items-center justify-between\">\n                            <CardTitle>Favourites</CardTitle>\n                            <Button asChild variant=\"link\" size=\"sm\">\n                                <Link href=\"/dashboard/favourites\">View All</Link>\n                            </Button>\n                        </CardHeader>\n                        <CardContent className=\"space-y-4\">\n                            {favorites.map((fav, index) => (\n                                <div key={index} className=\"flex items-center justify-between\">\n                                    <div className=\"flex items-center gap-3\">\n                                        <Avatar>\n                                            <AvatarImage src={fav.image} data-ai-hint=\"doctor portrait\" />\n                                            <AvatarFallback>{fav.name.charAt(0)}</AvatarFallback>\n                                        </Avatar>\n                                        <div>\n                                            <p className=\"font-semibold\">{fav.name}</p>\n                                            <p className=\"text-xs text-muted-foreground\">{fav.specialty}</p>\n                                        </div>\n                                    </div>\n                                    <Button size=\"icon\" variant=\"ghost\">\n                                        <Calendar className=\"w-4 h-4\"/>\n                                    </Button>\n                                </div>\n                            ))}\n                             {favorites.length === 0 && <p className=\"text-muted-foreground text-sm\">No favorite doctors added yet.</p>}\n                        </CardContent>\n                    </Card>\n                </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 xl:grid-cols-12 gap-6\">\n                <div className=\"xl:col-span-5 flex flex-col gap-6\">\n                    <Card>\n                        <CardHeader>\n                            <CardTitle>Appointments</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                            <Carousel opts={{ align: \"start\" }}>\n                                <CarouselContent className=\"-ml-2\">\n                                    {appointmentDates.map((date, index) => (\n                                        <CarouselItem key={index} className=\"basis-1/5 pl-2\">\n                                            <div className={`p-2 border rounded-lg text-center ${date.available ? 'bg-primary/10 border-primary text-primary' : 'bg-muted/50'}`}>\n                                                <p className=\"font-bold text-lg\">{date.day}</p>\n                                                <p className=\"text-xs\">{date.weekday}</p>\n                                            </div>\n                                        </CarouselItem>\n                                    ))}\n                                </CarouselContent>\n                                {appointmentDates.length > 5 && (\n                                    <>\n                                        <CarouselPrevious className=\"left-[-10px]\" />\n                                        <CarouselNext className=\"right-[-10px]\"/>\n                                    </>\n                                )}\n                            </Carousel>\n                            <div className=\"space-y-4 mt-4\">\n                                {upcomingAppointments.map((appt, index) => (\n                                    <div key={index} className=\"p-4 border rounded-lg\">\n                                        <div className=\"flex items-center justify-between\">\n                                            <div className=\"flex items-center gap-3\">\n                                                <Avatar>\n                                                    <AvatarImage src={appt.image} data-ai-hint=\"doctor portrait\"/>\n                                                    <AvatarFallback>{appt.doctor.charAt(0)}</AvatarFallback>\n                                                </Avatar>\n                                                <div>\n                                                    <p className=\"font-semibold\">{appt.doctor}</p>\n                                                    <p className=\"text-xs text-muted-foreground\">{appt.specialty}</p>\n                                                </div>\n                                            </div>\n                                            <appt.typeIcon className=\"w-5 h-5 text-muted-foreground\"/>\n                                        </div>\n                                        <div className=\"text-sm text-muted-foreground mt-3 flex items-center gap-2\"><Clock className=\"w-4 h-4\"/>{appt.dateTime}</div>\n                                        <div className=\"grid grid-cols-2 gap-2 mt-3\">\n                                            <Button variant=\"outline\" size=\"sm\"><MessageCircle className=\"w-4 h-4 mr-2\"/>Chat</Button>\n                                            <Button size=\"sm\"><Calendar className=\"w-4 h-4 mr-2\"/>Attend</Button>\n                                        </div>\n                                    </div>\n                                ))}\n                                {upcomingAppointments.length === 0 && <p className=\"text-muted-foreground text-sm text-center py-4\">No upcoming appointments.</p>}\n                            </div>\n                        </CardContent>\n                    </Card>\n                    <Card>\n                        <CardHeader className=\"flex-row items-center justify-between\">\n                            <CardTitle>Dependants</CardTitle>\n                             <Button asChild variant=\"link\" size=\"sm\">\n                                <Link href=\"/dashboard/dependents\">View All</Link>\n                            </Button>\n                        </CardHeader>\n                        <CardContent className=\"space-y-4\">\n                            {dependents.map((dep, index) => (\n                                <div key={index} className=\"flex items-center justify-between\">\n                                    <div className=\"flex items-center gap-3\">\n                                        <Avatar>\n                                            <AvatarImage src={dep.image} data-ai-hint=\"person portrait\"/>\n                                            <AvatarFallback>{dep.name.charAt(0)}</AvatarFallback>\n                                        </Avatar>\n                                        <div>\n                                            <p className=\"font-semibold\">{dep.name}</p>\n                                            <p className=\"text-xs text-muted-foreground\">{dep.relation} - {dep.age} years</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"flex items-center gap-2\">\n                                        <Button size=\"icon\" variant=\"ghost\"><Calendar className=\"w-4 h-4\"/></Button>\n                                        <Button size=\"icon\" variant=\"ghost\"><Eye className=\"w-4 h-4\"/></Button>\n                                    </div>\n                                </div>\n                            ))}\n                             {dependents.length === 0 && <p className=\"text-muted-foreground text-sm\">No dependents added.</p>}\n                        </CardContent>\n                    </Card>\n                </div>\n                 <div className=\"xl:col-span-7 flex flex-col gap-6\">\n                     <Card>\n                        <CardHeader>\n                            <CardTitle>Notifications</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                           <p className=\"text-muted-foreground text-sm\">Real-time notifications will be managed by the bell icon in the header.</p>\n                        </CardContent>\n                    </Card>\n                     <Card>\n                        <CardHeader>\n                            <CardTitle>Reports</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                            <Tabs defaultValue=\"appointments\">\n                                <TabsList className=\"grid w-full grid-cols-4\">\n                                    <TabsTrigger value=\"appointments\">Appointments</TabsTrigger>\n                                    <TabsTrigger value=\"medical-records\">Medical Records</TabsTrigger>\n                                    <TabsTrigger value=\"prescriptions\">Prescriptions</TabsTrigger>\n                                    <TabsTrigger value=\"invoices\">Invoices</TabsTrigger>\n                                </TabsList>\n                                <TabsContent value=\"appointments\">\n                                    <Table>\n                                        <TableHeader>\n                                            <TableRow>\n                                                <TableHead>Doctor</TableHead>\n                                                <TableHead>Date</TableHead>\n                                                <TableHead>Type</TableHead>\n                                                <TableHead>Status</TableHead>\n                                            </TableRow>\n                                        </TableHeader>\n                                        <TableBody>\n                                            {reports.appointments.map(item => (\n                                            <TableRow key={item.id}>\n                                                <TableCell>\n                                                    <div className=\"flex items-center gap-2\">\n                                                        <Avatar className=\"w-8 h-8\">\n                                                            <AvatarImage src={item.image} data-ai-hint=\"doctor portrait\"/>\n                                                            <AvatarFallback>{item.doctor.charAt(0)}</AvatarFallback>\n                                                        </Avatar>\n                                                        <span className=\"font-medium\">{item.doctor}</span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>{item.date}</TableCell>\n                                                <TableCell>{item.type}</TableCell>\n                                                <TableCell>\n                                                    <Badge variant={item.status === \"Cancelled\" ? \"destructive\" : item.status === \"Upcoming\" ? \"secondary\" : \"default\"}>{item.status}</Badge>\n                                                </TableCell>\n                                            </TableRow>\n                                            ))}\n                                            {reports.appointments.length === 0 && <TableRow><TableCell colSpan={4} className=\"text-center text-muted-foreground\">No appointment reports.</TableCell></TableRow>}\n                                        </TableBody>\n                                    </Table>\n                                </TabsContent>\n                                 <TabsContent value=\"medical-records\">\n                                     <Table>\n                                        <TableHeader>\n                                            <TableRow>\n                                                <TableHead>Name</TableHead>\n                                                <TableHead>Date</TableHead>\n                                                <TableHead>Comments</TableHead>\n                                                <TableHead className=\"text-right\">Action</TableHead>\n                                            </TableRow>\n                                        </TableHeader>\n                                        <TableBody>\n                                            {reports.medicalRecords.map(item => (\n                                                <TableRow key={item.id}>\n                                                    <TableCell className=\"font-medium\">{item.name}</TableCell>\n                                                    <TableCell>{item.date}</TableCell>\n                                                    <TableCell>{item.comments}</TableCell>\n                                                    <TableCell className=\"text-right space-x-1\">\n                                                        <Button variant=\"ghost\" size=\"icon\"><LinkIcon className=\"w-4 h-4\"/></Button>\n                                                        <Button variant=\"ghost\" size=\"icon\"><Download className=\"w-4 h-4\"/></Button>\n                                                        <Button variant=\"ghost\" size=\"icon\"><Trash2 className=\"w-4 h-4 text-destructive\"/></Button>\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))}\n                                             {reports.medicalRecords.length === 0 && <TableRow><TableCell colSpan={4} className=\"text-center text-muted-foreground\">No medical records.</TableCell></TableRow>}\n                                        </TableBody>\n                                     </Table>\n                                </TabsContent>\n                                <TabsContent value=\"prescriptions\">\n                                     <Table>\n                                        <TableHeader>\n                                            <TableRow>\n                                                <TableHead>Date</TableHead>\n                                                <TableHead>Prescribed By</TableHead>\n                                                <TableHead className=\"text-right\">Action</TableHead>\n                                            </TableRow>\n                                        </TableHeader>\n                                        <TableBody>\n                                            {reports.prescriptions.map(item => (\n                                                <TableRow key={item.id}>\n                                                    <TableCell>{item.date}</TableCell>\n                                                    <TableCell>\n                                                        <div className=\"flex items-center gap-2\">\n                                                            <Avatar className=\"w-8 h-8\">\n                                                                <AvatarImage src={item.image} data-ai-hint=\"doctor portrait\" />\n                                                                <AvatarFallback>{item.doctor.charAt(0)}</AvatarFallback>\n                                                            </Avatar>\n                                                            <span className=\"font-medium\">{item.doctor}</span>\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell className=\"text-right space-x-1\">\n                                                        <Button variant=\"ghost\" size=\"icon\"><LinkIcon className=\"w-4 h-4\"/></Button>\n                                                        <Button variant=\"ghost\" size=\"icon\"><Download className=\"w-4 h-4\"/></Button>\n                                                        <Button variant=\"ghost\" size=\"icon\"><Trash2 className=\"w-4 h-4 text-destructive\"/></Button>\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))}\n                                            {reports.prescriptions.length === 0 && <TableRow><TableCell colSpan={3} className=\"text-center text-muted-foreground\">No prescription reports.</TableCell></TableRow>}\n                                        </TableBody>\n                                     </Table>\n                                </TabsContent>\n                                 <TabsContent value=\"invoices\">\n                                    <Table>\n                                        <TableHeader>\n                                            <TableRow>\n                                                <TableHead>Doctor</TableHead>\n                                                <TableHead>Amount</TableHead>\n                                                <TableHead>Date</TableHead>\n                                                <TableHead className=\"text-right\">Action</TableHead>\n                                            </TableRow>\n                                        </TableHeader>\n                                        <TableBody>\n                                            {reports.invoices.map(item => (\n                                                <TableRow key={item.id}>\n                                                     <TableCell>\n                                                        <div className=\"flex items-center gap-2\">\n                                                            <Avatar className=\"w-8 h-8\">\n                                                                <AvatarImage src={item.image} data-ai-hint=\"doctor portrait\" />\n                                                                <AvatarFallback>{item.doctor.charAt(0)}</AvatarFallback>\n                                                            </Avatar>\n                                                            <span className=\"font-medium\">{item.doctor}</span>\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell>${item.amount.toFixed(2)}</TableCell>\n                                                    <TableCell>{item.date}</TableCell>\n                                                    <TableCell className=\"text-right space-x-1\">\n                                                        <Button variant=\"ghost\" size=\"icon\"><LinkIcon className=\"w-4 h-4\"/></Button>\n                                                        <Button variant=\"ghost\" size=\"icon\"><Trash2 className=\"w-4 h-4 text-destructive\"/></Button>\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))}\n                                            {reports.invoices.length === 0 && <TableRow><TableCell colSpan={4} className=\"text-center text-muted-foreground\">No invoice reports.</TableCell></TableRow>}\n                                        </TableBody>\n                                    </Table>\n                                 </TabsContent>\n                            </Tabs>\n                        </CardContent>\n                    </Card>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nfunction DashboardSkeleton() {\n    return (\n        <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 xl:grid-cols-12 gap-6\">\n                <div className=\"xl:col-span-8 flex flex-col gap-6\">\n                    <Card>\n                        <CardHeader>\n                            <CardTitle>Health Records</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                            <div className=\"grid md:grid-cols-2 gap-6\">\n                                <div className=\"grid grid-cols-2 gap-4\">\n                                    {[...Array(6)].map((_, i) => <Skeleton key={i} className=\"h-24\" />)}\n                                </div>\n                                <Skeleton className=\"h-full min-h-48\" />\n                            </div>\n                        </CardContent>\n                    </Card>\n                    <Card>\n                        <CardHeader>\n                            <CardTitle>Analytics</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                            <Skeleton className=\"h-72\" />\n                        </CardContent>\n                    </Card>\n                </div>\n                <div className=\"xl:col-span-4 flex flex-col gap-6\">\n                    <Skeleton className=\"h-28\" />\n                    <Card>\n                        <CardHeader>\n                            <CardTitle>Favourites</CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"space-y-4\">\n                            {[...Array(4)].map((_, i) => <Skeleton key={i} className=\"h-12\" />)}\n                        </CardContent>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"grid grid-cols-1 xl:grid-cols-12 gap-6\">\n                 <div className=\"xl:col-span-5 flex flex-col gap-6\">\n                     <Card>\n                        <CardHeader>\n                             <CardTitle>Appointments</CardTitle>\n                        </CardHeader>\n                         <CardContent className=\"space-y-4\">\n                             <Skeleton className=\"h-16\" />\n                             <Skeleton className=\"h-32\" />\n                             <Skeleton className=\"h-32\" />\n                         </CardContent>\n                     </Card>\n                     <Card>\n                        <CardHeader>\n                            <CardTitle>Dependants</CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"space-y-4\">\n                            {[...Array(2)].map((_, i) => <Skeleton key={i} className=\"h-12\" />)}\n                        </CardContent>\n                    </Card>\n                 </div>\n                 <div className=\"xl:col-span-7 flex flex-col gap-6\">\n                     <Card>\n                        <CardHeader>\n                            <CardTitle>Notifications</CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"space-y-4\">\n                           {[...Array(4)].map((_, i) => <Skeleton key={i} className=\"h-12\" />)}\n                        </CardContent>\n                     </Card>\n                     <Card>\n                        <CardHeader>\n                             <CardTitle>Reports</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                            <Skeleton className=\"h-64\" />\n                        </CardContent>\n                     </Card>\n                 </div>\n            </div>\n        </div>\n    )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}