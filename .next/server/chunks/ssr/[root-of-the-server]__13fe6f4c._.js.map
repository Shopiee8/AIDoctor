{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/automated-patient-intake.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview An automated patient intake AI agent.\n *\n * - automatedPatientIntake - A function that handles the automated patient intake process.\n * - AutomatedPatientIntakeInput - The input type for the automatedPatientIntake function.\n * - AutomatedPatientIntakeOutput - The return type for the automatedPatientIntake function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst AutomatedPatientIntakeInputSchema = z.object({\n  patientName: z.string().describe('The name of the patient.'),\n  chiefComplaint: z.string().describe('The primary reason for the patient seeking medical attention.'),\n  symptoms: z.string().describe('A detailed description of the patient’s symptoms.'),\n  medicalHistory: z.string().describe('The patient’s past medical history, including illnesses, surgeries, and hospitalizations.'),\n  medications: z.string().describe('A list of current medications the patient is taking, including dosages.'),\n  allergies: z.string().describe('A list of the patient’s allergies, including reactions.'),\n});\nexport type AutomatedPatientIntakeInput = z.infer<typeof AutomatedPatientIntakeInputSchema>;\n\nconst AutomatedPatientIntakeOutputSchema = z.object({\n  summary: z.string().describe('A concise summary of the patient intake information.'),\n  nextSteps: z.string().describe('Recommended next steps for the patient, such as scheduling an appointment or seeking immediate medical attention.'),\n});\nexport type AutomatedPatientIntakeOutput = z.infer<typeof AutomatedPatientIntakeOutputSchema>;\n\nexport async function automatedPatientIntake(input: AutomatedPatientIntakeInput): Promise<AutomatedPatientIntakeOutput> {\n  return automatedPatientIntakeFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'automatedPatientIntakePrompt',\n  input: {schema: AutomatedPatientIntakeInputSchema},\n  output: {schema: AutomatedPatientIntakeOutputSchema},\n  prompt: `You are an AI assistant designed to conduct patient intake for a medical clinic. Please collect the following information from the patient and provide a summary of their condition and recommended next steps.\n\nPatient Name: {{{patientName}}}\nChief Complaint: {{{chiefComplaint}}}\nSymptoms: {{{symptoms}}}\nMedical History: {{{medicalHistory}}}\nMedications: {{{medications}}}\nAllergies: {{{allergies}}}\n\nBased on this information, provide a concise summary of the patient's condition and recommend appropriate next steps.`,config: {\n    safetySettings: [\n      {\n        category: 'HARM_CATEGORY_HATE_SPEECH',\n        threshold: 'BLOCK_ONLY_HIGH',\n      },\n      {\n        category: 'HARM_CATEGORY_DANGEROUS_CONTENT',\n        threshold: 'BLOCK_NONE',\n      },\n      {\n        category: 'HARM_CATEGORY_HARASSMENT',\n        threshold: 'BLOCK_MEDIUM_AND_ABOVE',\n      },\n      {\n        category: 'HARM_CATEGORY_SEXUALLY_EXPLICIT',\n        threshold: 'BLOCK_LOW_AND_ABOVE',\n      },\n    ],\n  },\n});\n\nconst automatedPatientIntakeFlow = ai.defineFlow(\n  {\n    name: 'automatedPatientIntakeFlow',\n    inputSchema: AutomatedPatientIntakeInputSchema,\n    outputSchema: AutomatedPatientIntakeOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,oCAAoC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACpC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACpC,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACjC;AAGA,MAAM,qCAAqC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClD,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC7B,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACjC;AAGO,eAAe,uBAAuB,KAAkC;IAC7E,OAAO,2BAA2B;AACpC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAiC;IACjD,QAAQ;QAAC,QAAQ;IAAkC;IACnD,QAAQ,CAAC;;;;;;;;;qHAS0G,CAAC;IAAC,QAAQ;QAC3H,gBAAgB;YACd;gBACE,UAAU;gBACV,WAAW;YACb;YACA;gBACE,UAAU;gBACV,WAAW;YACb;YACA;gBACE,UAAU;gBACV,WAAW;YACb;YACA;gBACE,UAAU;gBACV,WAAW;YACb;SACD;IACH;AACF;AAEA,MAAM,6BAA6B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC9C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAhDoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/dashboard/patient-intake/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {automatedPatientIntake as '408ea4d9ec1f9e3664b502f1d4c191d83d60215eb0'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/patient-intake-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PatientIntakeForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call PatientIntakeForm() from the server but PatientIntakeForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/patient-intake-form.tsx <module evaluation>\",\n    \"PatientIntakeForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,wEACA","debugId":null}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/patient-intake-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PatientIntakeForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call PatientIntakeForm() from the server but PatientIntakeForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/patient-intake-form.tsx\",\n    \"PatientIntakeForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oDACA","debugId":null}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/patient-intake/page.tsx"],"sourcesContent":["import { PatientIntakeForm } from \"@/components/patient-intake-form\";\n\nexport default function PatientIntakePage() {\n  return (\n    <div className=\"space-y-4\">\n       <div>\n        <h1 className=\"text-3xl font-bold font-headline\">Automated Patient Intake</h1>\n        <p className=\"text-muted-foreground\">\n          Fill out the form below to have our AI assistant, Sam, process your information.\n        </p>\n      </div>\n      <PatientIntakeForm />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACZ,8OAAC;;kCACA,8OAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,8OAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;0BAIvC,8OAAC,+IAAA,CAAA,oBAAiB;;;;;;;;;;;AAGxB","debugId":null}}]
}